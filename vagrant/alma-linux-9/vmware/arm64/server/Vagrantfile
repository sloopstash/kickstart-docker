# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "sloopstash/alma-linux-9"
  config.vm.box_version = "2.1.1"

  # Define virtual machine name.
  # config.vm.define "sloopstash-alma-linux-9-server"

  # Set virtual machine hostname.
  # config.vm.hostname = "sloopstash-alma-linux-9-server"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 443, host: 443, auto_correct: false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.201.8"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # SSH credentials to connect to virtual machine.
  config.ssh.username = "vagrant"
  config.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key"]
  config.ssh.insert_key = false

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "vmware_fusion" do |vf|
    # Disable GUI when booting the virtual machine.
    vf.gui = false
  
    # Allocate memory to the virtual machine.
    # vf.memory = "2048"

    # Allocate processors to the virtual machine.
    # vf.cpus = "1"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    # Update installed packages.
    dnf update -y
    # Install system packages.
    dnf install -y wget vim nano net-tools gcc make tar git unzip sysstat tree initscripts bind-utils nc nmap logrotate crontabs
    dnf install -y python-devel python-pip python-setuptools
    # Install Supervisor.
    python -m pip install supervisor
    # Create Supervisor configuration directory.
    mkdir /etc/supervisord.d
  SHELL

  # Define multiple virtual machines.
  config.vm.define "sloopstash-dkr-mgr-1" do |sloopstash_dkr_mgr_1|
    sloopstash_dkr_mgr_1.vm.hostname = "sloopstash-dkr-mgr-1"
    sloopstash_dkr_mgr_1.vm.network "private_network", ip: "192.168.201.51"
    sloopstash_dkr_mgr_1.vm.provider "vmware_fusion" do |vf|
      vf.memory = "2048"
      vf.cpus = "1"
    end
  end
  config.vm.define "sloopstash-dkr-mgr-2" do |sloopstash_dkr_mgr_2|
    sloopstash_dkr_mgr_2.vm.hostname = "sloopstash-dkr-mgr-2"
    sloopstash_dkr_mgr_2.vm.network "private_network", ip: "192.168.201.52"
    sloopstash_dkr_mgr_2.vm.provider "vmware_fusion" do |vf|
      vf.memory = "2048"
      vf.cpus = "1"
    end
  end
  config.vm.define "sloopstash-dkr-wkr-1" do |sloopstash_dkr_wkr_1|
    sloopstash_dkr_wkr_1.vm.hostname = "sloopstash-dkr-wkr-1"
    sloopstash_dkr_wkr_1.vm.network "private_network", ip: "192.168.201.54"
    sloopstash_dkr_wkr_1.vm.provider "vmware_fusion" do |vf|
      vf.memory = "2048"
      vf.cpus = "1"
    end
  end
  config.vm.define "sloopstash-dkr-wkr-2" do |sloopstash_dkr_wkr_2|
    sloopstash_dkr_wkr_2.vm.hostname = "sloopstash-dkr-wkr-2"
    sloopstash_dkr_wkr_2.vm.network "private_network", ip: "192.168.201.55"
    sloopstash_dkr_wkr_2.vm.provider "vmware_fusion" do |vf|
      vf.memory = "2048"
      vf.cpus = "1"
    end
  end
  config.vm.define "sloopstash-dkr-wkr-3" do |sloopstash_dkr_wkr_3|
    sloopstash_dkr_wkr_3.vm.hostname = "sloopstash-dkr-wkr-3"
    sloopstash_dkr_wkr_3.vm.network "private_network", ip: "192.168.201.56"
    sloopstash_dkr_wkr_3.vm.provider "vmware_fusion" do |vf|
      vf.memory = "2048"
      vf.cpus = "1"
    end
  end
end
